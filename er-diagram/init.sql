-- MySQL Script generated by MySQL Workbench
-- Sun Apr 23 02:10:43 2017
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema dance
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `dance` ;

-- -----------------------------------------------------
-- Schema dance
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `dance` DEFAULT CHARACTER SET utf8 ;
USE `dance` ;

-- -----------------------------------------------------
-- Table `dance`.`user_`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dance`.`user_` ;

CREATE TABLE IF NOT EXISTS `dance`.`user_` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(45) NOT NULL,
  `email` VARCHAR(200) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `permission` VARCHAR(1000) NULL,
  `status` INT NULL,
  `version` INT NULL,
  `creator_id` INT NULL,
  `create_time` DATETIME NULL,
  `updator_id` INT NULL,
  `update_time` DATETIME NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `email_UNIQUE` ON `dance`.`user_` (`email` ASC);

CREATE INDEX `user_status` ON `dance`.`user_` (`status` ASC);


-- -----------------------------------------------------
-- Table `dance`.`role_`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dance`.`role_` ;

CREATE TABLE IF NOT EXISTS `dance`.`role_` (
  `role_id` INT NOT NULL,
  `name` VARCHAR(100) NULL,
  PRIMARY KEY (`role_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `dance`.`permission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dance`.`permission` ;

CREATE TABLE IF NOT EXISTS `dance`.`permission` (
  `permission_id` INT NOT NULL,
  `name` VARCHAR(100) NULL,
  `role_id` INT NULL,
  PRIMARY KEY (`permission_id`))
ENGINE = InnoDB;

CREATE INDEX `permission_role` ON `dance`.`permission` (`role_id` ASC);


-- -----------------------------------------------------
-- Table `dance`.`role_permission`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dance`.`role_permission` ;

CREATE TABLE IF NOT EXISTS `dance`.`role_permission` (
  `role_id` INT NOT NULL,
  `permission_id` INT NOT NULL,
  PRIMARY KEY (`role_id`, `permission_id`),
  CONSTRAINT `role_permission_r`
    FOREIGN KEY (`role_id`)
    REFERENCES `dance`.`role_` (`role_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `role_permission_p`
    FOREIGN KEY (`permission_id`)
    REFERENCES `dance`.`permission` (`permission_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `role_permission_p_idx` ON `dance`.`role_permission` (`permission_id` ASC);


-- -----------------------------------------------------
-- Table `dance`.`user_role`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `dance`.`user_role` ;

CREATE TABLE IF NOT EXISTS `dance`.`user_role` (
  `user_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  PRIMARY KEY (`user_id`, `role_id`),
  CONSTRAINT `user_role_u`
    FOREIGN KEY (`user_id`)
    REFERENCES `dance`.`user_` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `user_role_r`
    FOREIGN KEY (`role_id`)
    REFERENCES `dance`.`role_` (`role_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `user_role_r_idx` ON `dance`.`user_role` (`role_id` ASC);


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
